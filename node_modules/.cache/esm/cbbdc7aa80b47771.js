let GraphQLObjectType,GraphQLID,GraphQLList,BlogsModel,fields;_80b‍.x([["blog",()=>blog],["blogs",()=>blogs]]);_80b‍.w("graphql",[["GraphQLObjectType",["GraphQLObjectType"],function(v){GraphQLObjectType=v}],["GraphQLID",["GraphQLID"],function(v){GraphQLID=v}],["GraphQLList",["GraphQLList"],function(v){GraphQLList=v}]]);_80b‍.w("../models/Blogs",[["default",["BlogsModel"],function(v){BlogsModel=v}]]);_80b‍.w("../helperFields/BlogAndBlogs",[["default",["fields"],function(v){fields=v}]]);




const blog = {
    type: new GraphQLObjectType({
        name: "blog",
        fields
    }),
    args: { id: { type: GraphQLID }  },
    resolve: (parentValue, { id }) => {
        _80b‍.g.console.log({ parentValue, id })
        return BlogsModel.findById( id )
    }
}

const blogObject = new GraphQLObjectType({
    name: "blogs",
    fields
})


const blogs = {
    type: new GraphQLList(blogObject),
    args: {},
    resolve: (parentValue, args) => {
        _80b‍.g.console.log({ parentValue, args })
        return BlogsModel.find()
    }
}
